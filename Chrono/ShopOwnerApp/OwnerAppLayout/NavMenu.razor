<div id="sidebar" class="sidebar collapsed">
    <div class="sidebar-header">
        <div class="logo">C</div>
        <div class="logo-text">Chrono</div>
        <button @onclick="R.ComFn.ExpendToggle" type="button" class="btn-none toggle-btn">
            <MenuCollapIcon Width="30" Height="30" Class="menu-collap-svg" />
            <MenuExpendIcon Width="30" Height="30" Class="menu-expend-svg" />
        </button>
    </div>
    <div class="sidebar-menu">
        @foreach (var menuitem in MenuList)
        {
            bool active = menuitem.MainMenu.Name == R.Gva.CurrentPage;
            <button @onclick="()=>OnSelectMenu(menuitem.MainMenu)" class="btn-none menu-item @(active ? "active":"")">
                <div class="menu-icon">
                    @menuitem.MainMenu.Icon
                </div>
                <div class="menu-text">@menuitem.MainMenu.Name</div>
                <div class="menu-act-indicator"></div>
            </button>
            @if (menuitem.SubMenu.Any())
            {
                <div class="submenu-container @(active ? "sub-open":"")">
                    <div class="sub-conopen-indicator"></div>
                    @foreach (var menu in menuitem.SubMenu)
                    {
                        <div class="sub-menu-item @(menu.LastMenu ? "smi-last":"")">
                            <button @onclick="()=>OnSelectSubMenu(menu)" type="button" class="btn-none smi-btn @(SelectedSubMenu == menu.Name ? "sub-active":"")">
                                <div class="smib-text">
                                    <div class="smib-t-active-svg">
                                        @menu.Icon
                                    </div>
                                    @menu.Name
                                </div>
                                <div class="smib-svg">@menu.Icon</div>
                            </button>
                            @*  <div class="smi-ind smi-ind1">
                                <div class="smi-ind1-arrow">
                                    @SVGService.NavIndicatorIcon2(25, 25)
                                </div>
                            </div>
                            <div class="smi-ind smi-ind2"></div> *@
                        </div>
                    }
                </div>
            }
        }
    </div>
</div>

@code {
    private string SelectedSubMenu = string.Empty;

    private List<NavMenuItem> MenuList = new List<NavMenuItem>()
    {
        new NavMenuItem()
        {
            MenuId = 1,
            MainMenu = new SubMenuItem(){Name = MenuSection.Order, Route =  "/owner", Icon = SVGService.OrderIcon(25,25) },
        },
         new NavMenuItem()
        {
            MenuId = 2,
            MainMenu = new SubMenuItem(){Name = MenuSection.Main, Route =  "/owner/home", Icon = SVGService.MainIcon(25,25) },
        },
         new NavMenuItem()
        {
            MenuId = 3,
            MainMenu = new SubMenuItem(){Name = MenuSection.Setup, Route =  "/owner/setup", Icon = SVGService.SetupIcon(25,25) },
            SubMenu = new List<SubMenuItem>()
            {
               new SubMenuItem(){Name = MenuSection.Table, Route =  "/owner/table", Icon = SVGService.OrderIcon(22,22) },
               new SubMenuItem(){Name = MenuSection.Items, Route =  "/owner/items", Icon = SVGService.MainIcon(22,22) },
               new SubMenuItem(){Name = MenuSection.Category, Route =  "/owner/category", Icon = SVGService.CalendarIcon(22,22) },
               new SubMenuItem(){Name = MenuSection.Discount, Route =  "/owner/discount", Icon = SVGService.CalendarIcon(22,22), LastMenu = true },
            }
        },
    };

    private async Task OnSelectMenu(SubMenuItem menu)
    {
        R.Gva.CurrentPage = menu.Name;
        //R.Nav.NavigateTo(menu.Route);
        SelectedSubMenu = string.Empty;
        await R.Notifier.Update(NotifierObjectName.MainHeader, NotifierActionName.MainHeaderNameChange);
    }

    private async Task OnSelectSubMenu(SubMenuItem menu)
    {
        await Task.Delay(0);
        SelectedSubMenu = menu.Name;
        //R.Nav.NavigateTo(menu.Route);
        //await R.Notifier.Update(NotifierObjectName.MainHeader, NotifierActionName.MainHeaderNameChange);
    }

}