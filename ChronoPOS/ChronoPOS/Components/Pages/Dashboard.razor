@page "/"
@layout MainLayout

<div class="main-body">

    <div class="row my-row mb-3 dash-first">

        <div class="col-12 col-md-5 p-0 mb-3 mb-md-0">
            <div class="full dsah-box-style dash-df-1 p-2">

                <div class="row my-row">
                    <div class="col-6 p-0 pr-1">
                        <div class="ddf-1-card">
                            <div>Title of content</div>
                            <div>100,500 MMK</div>
                            <div>@SVGService.WarningIcon(15, 15) Info</div>
                        </div>
                    </div>
                    <div class="col-6 p-0 pl-1">
                        <div class="ddf-1-card">
                            <div>Title of content</div>
                            <div>100,500 MMK</div>
                            <div>@SVGService.WarningIcon(15, 15) Info</div>
                        </div>
                    </div>
                </div>

                <div class="row my-row">
                    <div class="col-6 p-0 pr-1">
                        <div class="ddf-1-card">
                            <div>Title of content</div>
                            <div>100,500 MMK</div>
                            <div>@SVGService.WarningIcon(15, 15) Info</div>
                        </div>
                    </div>
                    <div class="col-6 p-0 pl-1">
                        <div class="ddf-1-card">
                            <div>Title of content</div>
                            <div>100,500 MMK</div>
                            <div>@SVGService.WarningIcon(15, 15) Info</div>
                        </div>
                    </div>
                </div>

                <div class="row my-row">
                    <div class="col-6 p-0 pr-1">
                        <div class="ddf-1-card">
                            <div>Title of content</div>
                            <div>100,500 MMK</div>
                            <div>@SVGService.WarningIcon(15, 15) Info</div>
                        </div>
                    </div>
                    <div class="col-6 p-0 pl-1">
                        <div class="ddf-1-card">
                            <div>Title of content</div>
                            <div>100,500 MMK</div>
                            <div>@SVGService.WarningIcon(15, 15) Info</div>
                        </div>
                    </div>
                </div>

                @* <div class="row my-row">
                    <div class="col-6 p-0 pr-1">
                        <div class="ddf-1-card">
                            <div>Title of content</div>
                            <div>100,500 MMK</div>
                            <div>Description of content</div>
                        </div>
                    </div>
                    <div class="col-6 p-0 pl-1">
                        <div class="ddf-1-card">
                            <div>Title of content</div>
                            <div>100,500 MMK</div>
                            <div>Description of content</div>
                        </div>
                    </div>
                </div> *@

            </div>
        </div>
        <div class="col-12 col-md-7 p-0 pl-0 pl-md-2">
            <div class="dsah-box-style p-3 dash-df-2">
                @if (isFinished)
                {
                    <div class="dash-linechart-container">
                        <canvas id="line-area" />
                    </div>
                }
            </div>
        </div>

    </div>

    <div class="row my-row dash-second">

        <div class="col-12 col-md-4 p-0 mb-3 mb-md-0">

            <div class="dsah-box-style p-3 dash-ds-1 ">
                @if (isFinished)
                {
                    <div class="dash-dnchar-container">
                        <canvas id="chart-area" />
                    </div>
                }
            </div>

        </div>
        <div class="col-12 col-md-8 p-0 pl-0 pl-md-2">

            <div class="dsah-box-style full dash-ds-2 p-2">
                <table>
                    <thead>
                        <tr>
                            <th style="width : 70px;">No.</th>
                            <th>Column 1</th>
                            <th>Column 2</th>
                            <th>Column 3</th>
                            <th>Column 4</th>
                            <th>Column 5</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Table Rows -->
                        <tr><td>1</td><td>Data 1-1</td><td>Data 1-2</td><td>Data 1-3</td><td>Data 1-4</td><td>Data 1-5</td></tr>
                        <tr><td>2</td><td>Data 2-1</td><td>Data 2-2</td><td>Data 2-3</td><td>Data 2-4</td><td>Data 2-5</td></tr>
                        <tr><td>3</td><td>Data 3-1</td><td>Data 3-2</td><td>Data 3-3</td><td>Data 3-4</td><td>Data 3-5</td></tr>
                        <tr><td>4</td><td>Data 4-1</td><td>Data 4-2</td><td>Data 4-3</td><td>Data 4-4</td><td>Data 4-5</td></tr>
                        <tr><td>5</td><td>Data 5-1</td><td>Data 5-2</td><td>Data 5-3</td><td>Data 5-4</td><td>Data 5-5</td></tr>
                        <tr><td>6</td><td>Data 6-1</td><td>Data 6-2</td><td>Data 6-3</td><td>Data 6-4</td><td>Data 6-5</td></tr>
                        <tr><td>7</td><td>Data 7-1</td><td>Data 7-2</td><td>Data 7-3</td><td>Data 7-4</td><td>Data 7-5</td></tr>
                        <tr><td>8</td><td>Data 8-1</td><td>Data 8-2</td><td>Data 8-3</td><td>Data 8-4</td><td>Data 8-5</td></tr>
                        <tr><td>9</td><td>Data 9-1</td><td>Data 9-2</td><td>Data 9-3</td><td>Data 9-4</td><td>Data 9-5</td></tr>
                        <tr><td>10</td><td>Data 10-1</td><td>Data 10-2</td><td>Data 10-3</td><td>Data 10-4</td><td>Data 10-5</td></tr>
                    </tbody>
                </table>
            </div>

        </div>

    </div>

</div>

@code {
    private bool isFinished;
    private string chartBcolor = "#BAEB36";
    protected override void OnInitialized()
    {
        Notifier.NotifyAsync += ReceivedNotifier;
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isFinished = true;
            StateHasChanged();
            await Task.Delay(200);
            await InitializeCharts();
        }
    }

    private async Task InitializeCharts()
    {
        await JSRuntime.InvokeVoidAsync("ChartJSFunctions.DoughnutChart", "chart-area", chartBcolor);
        await JSRuntime.InvokeVoidAsync("ChartJSFunctions.LineChart", "line-area", chartBcolor);
    }

    private async Task ReceivedNotifier(string ON, string AN, object? data)
    {
        if (ON == NotifierObjectName.ThemeUpdate && AN == NotifierActionName.ThemeUpdateAction && data is not null)
        {
            isFinished = false;
            StateHasChanged();
            isFinished = true;
            StateHasChanged();
            await Task.Delay(100);
            chartBcolor = data.ToString() ?? "#FFFFFF";
            await InitializeCharts();
        }
    }

    public void Dispose()
    {
        Notifier.NotifyAsync -= ReceivedNotifier;
    }
}