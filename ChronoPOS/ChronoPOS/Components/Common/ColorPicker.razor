
<div class="apptheme-container pl-1">
    <button type="button" class="btn-none theme-select-btn" >
        <div class="tsb-1"></div>
        <div class="tsb-2">
            <div class="tsb-2-1"></div>
            <div class="tsb-2-2"></div>
        </div>
    </button>
    <div class="theme-select-text">Theme</div>
    <div id="apptheme-circle-container">
        @foreach (var theme in Themes)
        {
            <div class="apptheme-circle" id="circle@(theme.Id)" data="@(theme.ThemeName)" data-id="@theme.ColorCode" style="background : @(theme.ColorCode);"></div>
        }
    </div>
</div>

@code{

    private readonly List<AppTheme> Themes = new List<AppTheme>{
        new AppTheme(){ Id = 1, ThemeName = "Theme1" , ColorCode = "#BAEB36" },
        new AppTheme(){ Id = 2, ThemeName = "Theme2" , ColorCode = "#ffb600" },
        new AppTheme(){ Id = 3, ThemeName = "Theme3" , ColorCode = "#9655ff" },
        new AppTheme(){ Id = 4, ThemeName = "Theme4" , ColorCode = "#ff495f" },
        // new AppTheme(){ Id = 5, ThemeName = "Theme5" , ColorCode = "#28ffbe" }
    };

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            JSRuntime.InvokeVoidAsync("InitializeThemes");
        }
    }

}